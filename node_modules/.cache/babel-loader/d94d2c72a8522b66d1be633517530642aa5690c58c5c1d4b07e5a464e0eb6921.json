{"ast":null,"code":"var _jsxFileName = \"/workspaces/Tutor/src/pages/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  tutorId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Load messages for this tutor from localStorage\n    const key = tutorId ? `messages_${tutorId}` : 'messages';\n    const stored = JSON.parse(localStorage.getItem(key) || '[]');\n    setMessages(stored);\n  }, [tutorId]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const msg = {\n      id: Date.now(),\n      sender: 'You',\n      message: newMessage,\n      timestamp: new Date().toLocaleString()\n    };\n    const updated = [...messages, msg];\n    setMessages(updated);\n    const key = tutorId ? `messages_${tutorId}` : 'messages';\n    localStorage.setItem(key, JSON.stringify(updated));\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      marginTop: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [\"Messages \", tutorId ? `with Tutor ${tutorId}` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: 200,\n        overflowY: 'auto',\n        marginBottom: 16\n      },\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#888'\n        },\n        children: \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12,\n          borderBottom: '1px solid #eee',\n          paddingBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.85rem',\n            color: '#999'\n          },\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      placeholder: \"Type a message...\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      style: {\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      style: {\n        width: 'auto',\n        padding: '8px 20px'\n      },\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Messages;\nconst styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  messageBox: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  sender: {\n    fontWeight: 'bold'\n  },\n  message: {\n    marginVertical: 4\n  },\n  time: {\n    fontSize: 12,\n    color: '#999'\n  }\n};\nexport default Messages;\n/*{/* const fetchMessages = async () => {\r\n   try {\r\n     const response = await axios.get('http://localhost:3000/api/messages');\r\n     setMessages(response.data);\r\n   } catch (error) {\r\n     console.error('Error fetching messages:', error);\r\n   }\r\n };\r\n   fetchMessages();\r\n   const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n return () => clearInterval(interval); // Cleanup interval on unmount\r\n}, []);\r\n const handleSendMessage = async () => {\r\n try {\r\n   const response = await axios.post('http://localhost:3000/api/messages', {\r\n     content: newMessage,\r\n   });\r\n   setMessages((prevMessages) => [...prevMessages, response.data]);\r\n   setNewMessage('');\r\n } catch (error) {\r\n   console.error('Error sending message:', error);\r\n }\r\n};\r\n return (\r\n <div>\r\n   <h1>Messages</h1>\r\n   <div>\r\n     {messages.map((msg, index) => (\r\n       <p key={index}>{msg.content}</p>\r\n     ))}\r\n   </div>\r\n   <input\r\n     type=\"text\"\r\n     value={newMessage}\r\n     onChange={(e) => setNewMessage(e.target.value)}\r\n   />\r\n   <button onClick={handleSendMessage}>Send</button>\r\n </div>\r\n);\r\n};*/\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Messages","tutorId","_s","messages","setMessages","newMessage","setNewMessage","key","stored","JSON","parse","localStorage","getItem","handleSendMessage","trim","msg","id","Date","now","sender","message","timestamp","toLocaleString","updated","setItem","stringify","className","style","marginTop","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","length","color","map","borderBottom","paddingBottom","fontSize","type","placeholder","value","onChange","e","target","width","padding","onClick","_c","styles","container","flex","backgroundColor","header","fontWeight","messageBox","borderBottomWidth","borderBottomColor","marginVertical","time","$RefreshReg$"],"sources":["/workspaces/Tutor/src/pages/Messages.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Messages = ({ tutorId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Load messages for this tutor from localStorage\r\n    const key = tutorId ? `messages_${tutorId}` : 'messages';\r\n    const stored = JSON.parse(localStorage.getItem(key) || '[]');\r\n    setMessages(stored);\r\n  }, [tutorId]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n    const msg = {\r\n      id: Date.now(),\r\n      sender: 'You',\r\n      message: newMessage,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n    const updated = [...messages, msg];\r\n    setMessages(updated);\r\n    const key = tutorId ? `messages_${tutorId}` : 'messages';\r\n    localStorage.setItem(key, JSON.stringify(updated));\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{marginTop: 24}}>\r\n      <h2 style={{marginBottom: 16}}>Messages {tutorId ? `with Tutor ${tutorId}` : ''}</h2>\r\n      <div style={{maxHeight: 200, overflowY: 'auto', marginBottom: 16}}>\r\n        {messages.length === 0 ? (\r\n          <p style={{color:'#888'}}>No messages yet.</p>\r\n        ) : (\r\n          messages.map(msg => (\r\n            <div key={msg.id} style={{marginBottom: 12, borderBottom: '1px solid #eee', paddingBottom: 8}}>\r\n              <strong>{msg.sender}:</strong> <span>{msg.message}</span>\r\n              <div style={{fontSize: '0.85rem', color: '#999'}}>{msg.timestamp}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        placeholder=\"Type a message...\"\r\n        value={newMessage}\r\n        onChange={e => setNewMessage(e.target.value)}\r\n        style={{marginBottom: 8}}\r\n      />\r\n      <button className=\"button\" style={{width: 'auto', padding: '8px 20px'}} onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n    \r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  messageBox: {\r\n    padding: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  sender: {\r\n    fontWeight: 'bold',\r\n  },\r\n  message: {\r\n    marginVertical: 4,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: '#999',\r\n  },\r\n  };\r\n\r\nexport default Messages;\r\n   /*{/* const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/messages');\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/messages', {\r\n        content: newMessage,\r\n      });\r\n      setMessages((prevMessages) => [...prevMessages, response.data]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages</h1>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.content}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};*/\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}