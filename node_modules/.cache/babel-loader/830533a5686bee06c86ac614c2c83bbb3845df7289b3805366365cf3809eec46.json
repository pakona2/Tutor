{"ast":null,"code":"import React,{useState,useEffect,Text,View,ScrollView,ActivityIndicator}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Messages=_ref=>{let{userId}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{axios.get(\"http://localhost:3000/api/messages/\".concat(userId)).then(response=>{setMessages(response.data);setLoading(false);}).catch(error=>{console.error('Error fetching messges:',error);setLoading(false);});},[userId]);if(loading){return/*#__PURE__*/_jsx(ActivityIndicator,{size:\"large\",color:\"0000\",style:{marginTop:40}});}return/*#__PURE__*/_jsxs(ScrollView,{style:styles.container,children:[/*#__PURE__*/_jsx(Text,{style:styles.header,children:\"Messages\"}),messages.map(msg=>/*#__PURE__*/_jsxs(View,{style:styles.messageBox,children:[/*#__PURE__*/_jsxs(Text,{style:styles.sender,children:[msg.sender_id===userId?'You':\"User \".concat(msg.sender_id),\":\"]}),/*#__PURE__*/_jsx(Text,{style:styles.message,children:msg.message}),/*#__PURE__*/_jsx(Text,{style:styles.time,children:new Date(msg.timestamp).toLocaleString()})]},msg.id))]});};const styles={container:{flex:1,padding:16,backgroundColor:'#fff'},header:{fontSize:24,fontWeight:'bold',marginBottom:16},messageBox:{padding:12,borderBottomWidth:1,borderBottomColor:'#eee'},sender:{fontWeight:'bold'},message:{marginVertical:4},time:{fontSize:12,color:'#999'}};export default Messages;/*{/* const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/messages');\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/messages', {\r\n        content: newMessage,\r\n      });\r\n      setMessages((prevMessages) => [...prevMessages, response.data]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages</h1>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.content}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};*/","map":{"version":3,"names":["React","useState","useEffect","Text","View","ScrollView","ActivityIndicator","axios","jsx","_jsx","jsxs","_jsxs","Messages","_ref","userId","messages","setMessages","loading","setLoading","get","concat","then","response","data","catch","error","console","size","color","style","marginTop","styles","container","children","header","map","msg","messageBox","sender","sender_id","message","time","Date","timestamp","toLocaleString","id","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","marginVertical"],"sources":["/workspaces/Tutor/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, Text, View, ScrollView, ActivityIndicator } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Messages = ({ userId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3000/api/messages/${userId}`)\r\n      .then((response) => {\r\n        setMessages(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messges:', error);\r\n        setLoading(false);\r\n      });\r\n    },[userId]);\r\n\r\n    if(loading) {\r\n      return <ActivityIndicator size=\"large\" color=\"0000\" style={{marginTop:40}}/>;\r\n    }\r\n\r\n    return (\r\n      <ScrollView style={ styles.container }>\r\n        <Text style={styles.header}>Messages</Text>\r\n        {messages.map(msg=>(\r\n          <View key={msg.id} style={styles.messageBox}>\r\n            <Text style={styles.sender}>{msg.sender_id===userId?'You': `User ${msg.sender_id}`}:</Text>\r\n            <Text style={styles.message}>{msg.message}</Text>\r\n            <Text style={styles.time}>{new Date(msg.timestamp).toLocaleString()}</Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n    \r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  messageBox: {\r\n    padding: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  sender: {\r\n    fontWeight: 'bold',\r\n  },\r\n  message: {\r\n    marginVertical: 4,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: '#999',\r\n  },\r\n  };\r\n\r\nexport default Messages;\r\n   /*{/* const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/messages');\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/messages', {\r\n        content: newMessage,\r\n      });\r\n      setMessages((prevMessages) => [...prevMessages, response.data]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages</h1>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.content}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};*/\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}