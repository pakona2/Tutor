{"ast":null,"code":"var _jsxFileName = \"/workspaces/Tutor/src/pages/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Text, View, ScrollView, Stylesheet, ActivityIndicator } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  userId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/messages/${userId}`).then(response => {\n      setMessages(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching messges:', error);\n      setLoading(false);\n    });\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"0000\",\n      style: {\n        marginTop: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.header,\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(View, {\n      style: styles.messageBox,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.sender,\n        children: [msg.sender_id === userId ? 'You' : `User ${msg.sender_id}`, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.message,\n        children: msg.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.time,\n        children: new Date(msg.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, msg.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(Messages, \"iENrkQA4ceL8nzHtV8t1eR+7xGM=\");\n_c = Messages;\nconst styles = Stylesheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  messageBox: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  sender: {\n    fontWeight: 'bold'\n  },\n  message: {\n    marginVertical: 4\n  },\n  time: {\n    fontSize: 12,\n    color: '#999'\n  }\n});\nexport default Messages;\n/*{/* const fetchMessages = async () => {\r\n   try {\r\n     const response = await axios.get('http://localhost:3000/api/messages');\r\n     setMessages(response.data);\r\n   } catch (error) {\r\n     console.error('Error fetching messages:', error);\r\n   }\r\n };\r\n   fetchMessages();\r\n   const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n return () => clearInterval(interval); // Cleanup interval on unmount\r\n}, []);\r\n const handleSendMessage = async () => {\r\n try {\r\n   const response = await axios.post('http://localhost:3000/api/messages', {\r\n     content: newMessage,\r\n   });\r\n   setMessages((prevMessages) => [...prevMessages, response.data]);\r\n   setNewMessage('');\r\n } catch (error) {\r\n   console.error('Error sending message:', error);\r\n }\r\n};\r\n return (\r\n <div>\r\n   <h1>Messages</h1>\r\n   <div>\r\n     {messages.map((msg, index) => (\r\n       <p key={index}>{msg.content}</p>\r\n     ))}\r\n   </div>\r\n   <input\r\n     type=\"text\"\r\n     value={newMessage}\r\n     onChange={(e) => setNewMessage(e.target.value)}\r\n   />\r\n   <button onClick={handleSendMessage}>Send</button>\r\n </div>\r\n);\r\n};*/\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Text","View","ScrollView","Stylesheet","ActivityIndicator","axios","jsxDEV","_jsxDEV","Messages","userId","_s","messages","setMessages","loading","setLoading","get","then","response","data","catch","error","console","size","color","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","children","header","map","msg","messageBox","sender","sender_id","message","time","Date","timestamp","toLocaleString","id","_c","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","marginVertical","$RefreshReg$"],"sources":["/workspaces/Tutor/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, Text, View, ScrollView,Stylesheet,ActivityIndicator } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Messages = ({ userId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3000/api/messages/${userId}`)\r\n      .then((response) => {\r\n        setMessages(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching messges:', error);\r\n        setLoading(false);\r\n      });\r\n    },[userId]);\r\n\r\n    if(loading) {\r\n      return <ActivityIndicator size=\"large\" color=\"0000\" style={{marginTop:40}}/>;\r\n    }\r\n\r\n    return (\r\n      <ScrollView style={ styles.container }>\r\n        <Text style={styles.header}>Messages</Text>\r\n        {messages.map(msg=>(\r\n          <View key={msg.id} style={styles.messageBox}>\r\n            <Text style={styles.sender}>{msg.sender_id===userId?'You': `User ${msg.sender_id}`}:</Text>\r\n            <Text style={styles.message}>{msg.message}</Text>\r\n            <Text style={styles.time}>{new Date(msg.timestamp).toLocaleString()}</Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n    \r\nconst styles = Stylesheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  messageBox: {\r\n    padding: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  sender: {\r\n    fontWeight: 'bold',\r\n  },\r\n  message: {\r\n    marginVertical: 4,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: '#999',\r\n  },\r\n});\r\n\r\nexport default Messages;\r\n   /*{/* const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/messages');\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    const interval = setInterval(fetchMessages, 5000); // Poll every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/messages', {\r\n        content: newMessage,\r\n      });\r\n      setMessages((prevMessages) => [...prevMessages, response.data]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Messages</h1>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.content}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};*/\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}